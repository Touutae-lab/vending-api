//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var UserLogin = newUserLoginTable("vending_machine_service", "user_login", "")

type userLoginTable struct {
	postgres.Table

	// Columns
	ID       postgres.ColumnInteger
	Username postgres.ColumnString
	Password postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type UserLoginTable struct {
	userLoginTable

	EXCLUDED userLoginTable
}

// AS creates new UserLoginTable with assigned alias
func (a UserLoginTable) AS(alias string) *UserLoginTable {
	return newUserLoginTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UserLoginTable with assigned schema name
func (a UserLoginTable) FromSchema(schemaName string) *UserLoginTable {
	return newUserLoginTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UserLoginTable with assigned table prefix
func (a UserLoginTable) WithPrefix(prefix string) *UserLoginTable {
	return newUserLoginTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UserLoginTable with assigned table suffix
func (a UserLoginTable) WithSuffix(suffix string) *UserLoginTable {
	return newUserLoginTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUserLoginTable(schemaName, tableName, alias string) *UserLoginTable {
	return &UserLoginTable{
		userLoginTable: newUserLoginTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newUserLoginTableImpl("", "excluded", ""),
	}
}

func newUserLoginTableImpl(schemaName, tableName, alias string) userLoginTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		UsernameColumn = postgres.StringColumn("username")
		PasswordColumn = postgres.StringColumn("password")
		allColumns     = postgres.ColumnList{IDColumn, UsernameColumn, PasswordColumn}
		mutableColumns = postgres.ColumnList{UsernameColumn, PasswordColumn}
	)

	return userLoginTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:       IDColumn,
		Username: UsernameColumn,
		Password: PasswordColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
